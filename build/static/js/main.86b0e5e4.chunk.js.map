{"version":3,"sources":["components/Weather.js","components/Title.js","components/Form.js","components/Clock.js","App.js","index.js"],"names":["Weather","this","props","clickHandler","degreesK","displayUnits","Math","floor","className","city","country","icon","src","alt","size","kelvinTemp","onClick","handleClicked","bind","calculateTemp","description","tempMin","tempMax","humidity","pressure","error","React","Component","Title","state","Forms","Form","onSubmit","getWeather","FormGroup","Label","for","Input","type","name","placeholder","Button","Clock","date","Date","newDate","getDate","getMonth","getFullYear","timerID","setInterval","tick","clearInterval","setState","class","toLocaleTimeString","getCurrentDate","API_KEY","App","undefined","e","a","async","preventDefault","target","elements","value","fetch","api_call","json","data","main","temp","temp_min","temp_max","sys","weather","unit","alert","city_data","toggleDisplayUnits","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86b0e5e4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\n\nclass Weather extends React.Component {\n  handleClicked() {\n    this.props.clickHandler();\n  }\n\n  calculateTemp(degreesK, displayUnits) {\n    if (displayUnits === \"C\") return Math.floor(degreesK - 273);\n    else return Math.floor(((degreesK - 273) * 9) / 5 + 32);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"cards pt-4\">\n          <h1>\n            {this.props.city && this.props.country && (\n              <p>\n                {this.props.city}, {this.props.country}\n              </p>\n            )}\n          </h1>\n          {this.props.icon && (\n            <p>\n              <img\n                src={`http://openweathermap.org/img/w/${this.props.icon}.png`}\n                alt=\"wthr img\"\n                size=\"40px\"\n              />\n            </p>\n          )}\n          <h1 className=\"py-2\">\n            {this.props.kelvinTemp && (\n              <p>\n                <i className=\"fas fa-thermometer-three-quarters\"></i>{\" \"}\n                <span onClick={this.handleClicked.bind(this)}>\n                  {this.calculateTemp(\n                    this.props.kelvinTemp,\n                    this.props.displayUnits\n                  )}\n                  &deg;\n                  {this.props.displayUnits}\n                </span>\n              </p>\n            )}\n          </h1><br></br>\n          <h4 className=\"py-6\">\n            {this.props.description && (\n              <p>\n                {\" \"}\n                <i className=\"fas fa-info\"></i>{\" \"}\n                <span>{this.props.description}</span>\n              </p>\n            )}\n          </h4>\n          <h4 className=\"py-3\">\n            {this.props.tempMin && this.props.tempMax && (\n              <p>\n                {\" \"}\n                <i className=\"fas fa-sort\"></i> Min/Max:{\" \"}\n                <span onClick={this.handleClicked.bind(this)}>\n                  {this.calculateTemp(\n                    this.props.tempMin,\n                    this.props.displayUnits\n                  )}\n                  &deg;{this.props.displayUnits} |\n                  {this.calculateTemp(\n                    this.props.tempMax,\n                    this.props.displayUnits\n                  )}\n                  &deg;\n                  {this.props.displayUnits}\n                </span>\n              </p>\n            )}\n          </h4>\n          <h4 className=\"py-4\">\n            {this.props.humidity && (\n              <p>\n                {\" \"}\n                <i className=\"fas fa-water\"></i> Humidity:{\" \"}\n                <span>{this.props.humidity}%</span>\n              </p>\n            )}\n          </h4>\n          <h4 className=\"py-5\">\n            {this.props.pressure && (\n              <p>\n                {\" \"}\n                <i className=\"fas fa-tachometer-alt\"></i> Pressure:{\" \"}\n                <span>{this.props.pressure} hPa</span>\n              </p>\n            )}\n          </h4>\n          <h4>\n            {this.props.error && (\n              <p>\n                {\" \"}\n                <i></i> <span>{this.props.error}</span>\n              </p>\n            )}\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\nimport \"../App.css\";\n\nclass Title extends React.Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Welcome to Weather App</h1>\n        <p>Get the latest weather details</p>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"../form.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nconst Forms = (props) => {\n  return (\n    <div className=\"container form-container\">\n     <Form onSubmit={props.getWeather}>\n      <FormGroup>\n        <Label for=\"exampleEmail\">City</Label>\n        <Input  type=\"text\"\n              name=\"city\"\n              className=\"form-control\"\n              placeholder=\"City\" />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Country</Label>\n        <Input  type=\"text\"\n              name=\"country\"\n              className=\"form-control\"\n              placeholder=\"Country\"/>\n      </FormGroup>\n                 <Button className=\"submit-btn\">Get Weather</Button>\n    </Form>\n\n    </div>\n    \n  );\n};\n\nexport default Forms;\n","import React from \"react\";\nimport \"../App.css\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  getCurrentDate() {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return month + \"-\" + date + \"-\" + year;\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container mb-5 mt-5\">\n        <p>Your Local Time and Date</p>\n        <i class=\"far fa-clock\"></i>{\" \"}\n        {this.state.date.toLocaleTimeString()}<br></br>\n        <i class=\"far fa-calendar-alt\"></i>{\" \"}\n        {this.getCurrentDate()}.\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Weather from \"./components/Weather\";\nimport Title from \"./components/Title\";\nimport Forms from \"./components/Form\";\nimport Clock from \"./components/Clock\"; \nconst API_KEY = '4e50640636ddfba682f0db27c3d5c6ba';\n\nclass App extends React.Component {\n  state = {\n    kelvinTemp: undefined,\n    tempMin: undefined,\n    tempMax: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    pressure: undefined,\n    displayUnits: \"F\",\n    error: false,\n    icon: undefined,\n  };\n\n  toggleDisplayUnits() {\n    this.state.displayUnits === \"F\"\n      ? this.setState({\n          displayUnits: \"C\",\n        })\n      : this.setState({\n          displayUnits: \"F\",\n        });\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${API_KEY}`\n    );\n\n    const data = await api_call.json();\n    \n        try {\n      if (city && country) {\n        this.setState({\n          kelvinTemp: data.main.temp,\n          tempMin: data.main.temp_min,\n          tempMax: data.main.temp_max,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          pressure: data.main.pressure,\n          unit: data.main.temp,\n          error: false,\n          icon: data.weather[0].icon,\n        });\n      } else {\n        this.setState({\n          kelvinTemp: undefined,\n          tempMin: undefined,\n          tempMax: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          pressure: undefined,\n          unit: undefined,\n          icon: undefined,\n          error: \"Please Enter Correct Values\",\n        });\n      }\n    } catch (error) {\n      alert(\"Sorry, try again!\");\n    }\n  };\n \n  render() {\n   const city_data= this.state.icon;\n\n    return (\n      <div className=\"App\"> \n        <Title />\n        <Clock  />\n        {city_data  \n        ? <Weather\n          kelvinTemp={this.state.kelvinTemp}\n          tempMin={this.state.tempMin}\n          tempMax={this.state.tempMax}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          pressure={this.state.pressure}\n          displayUnits={this.state.displayUnits}\n          clickHandler={this.toggleDisplayUnits.bind(this)}\n          error={this.state.error}\n          icon={this.state.icon}\n           \n        />  \n        :  <Forms getWeather={this.getWeather} /> \n      }\n        \n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}